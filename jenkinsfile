def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger'
    ]
pipeline {
    agent any
     environment {
        SCANNER_HOME = tool 'sonarqube'
    }
    stages {
        stage('git checkout') {
            steps {
             git branch:'main' url 'https://github.com/SandhyaReddy-2713/java-application.git'
            }
        }
         stage('compile') {
            steps {
              sh 'mvn compile'
            }
        }
         stage('code analysis') {
            steps {
              withSonarQubeEnv('sonar-server') {
               sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=java-application \
               -Dsonar.java.binaries=. \
               -Dsonar.projectKey=java-application'''
              }
            }
        }
        
         stage('docker build') {
            steps {
              sh 'docker build -t java-image .'
            }
        }
         stage('containers') {
            steps {
                sh 'docker stop $(docker ps -q)'
                sh 'docker rm $(docker ps -aq)'
                sh 'docker rmi $(docker images -q)'
            }
         }
        stage('Run Docker Container') {
          steps {
            sh 'docker run -itd --name java--image -p 8085:8081 java-image'
        }
     } 
   }	
 
    post {
        always {
            echo 'slack Notification.'
            slackSend channel: '#java-channel',
            color: COLOR_MAP [currentBuild.currentResult],
            message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URl}"
            
        }
    }
}

